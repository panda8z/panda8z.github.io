{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"indexPosts":{"nodes":[{"excerpt":"img C语言的错误检查 Java的错误处理 Go语言的错误处理 资源清理 Error Check Hell 包装错误 参考文章 错误处理一直以一是编程必需要面对的问题，错误处理如果做的好的话，代码的稳定性会很好。不同的语言有不同的出现处理的方式。Go…","frontmatter":{"date":"January 2021","title":"GO 编程模式02：错误处理","slug":"go-program-pattern-handle-errors"},"fields":{"slug":"/Go编程模式-转载自酷壳/GO 编程模式：错误处理/"}},{"excerpt":"img 图片来源：GopherSource 反转控制IoC – Inversion of Control 是一种软件设计的方法，其主要的思想是把控制逻辑与业务逻辑分享，不要在业务逻辑里写控制逻辑，这样会让控制逻辑依赖于业务逻辑，而是反过来，让业务逻辑依赖控制逻辑。在《IoC…","frontmatter":{"date":"January 2021","title":"GO编程模式04：委托和反转控制","slug":"go-program-pattern-delegation-and-reverse-control"},"fields":{"slug":"/Go编程模式-转载自酷壳/GO编程模式：委托和反转控制/"}},{"excerpt":"img 在本篇文章中，我们学习一下函数式编程的中非常重要的Map、Reduce、Filter的三种操作，这三种操作可以让我们非常方便灵活地进行一些数据处理——我们的程序中大多数情况下都是在到倒腾数据，尤其对于一些需要统计的业务场景，Map/Reduce/Filter…","frontmatter":{"date":"January 2021","title":"GO编程模式05：MAP-REDUCE","slug":"go-program-pattern-map-reduce"},"fields":{"slug":"/Go编程模式-转载自酷壳/GO编程模式：MAP-REDUCE/"}}]},"total":{"totalCount":11}},"pageContext":{}},"staticQueryHashes":["2841359383"]}