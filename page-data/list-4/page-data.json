{"componentChunkName":"component---src-templates-blog-list-js","path":"/list-4","result":{"data":{"site":{"siteMetadata":{"title":"Panda8z`s Blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"img C语言的错误检查 Java的错误处理 Go语言的错误处理 资源清理 Error Check Hell 包装错误 参考文章 错误处理一直以一是编程必需要面对的问题，错误处理如果做的好的话，代码的稳定性会很好。不同的语言有不同的出现处理的方式。Go…","fields":{"slug":"/Go编程模式-转载自酷壳/GO 编程模式：错误处理/"},"frontmatter":{"slug":"go-program-pattern-handle-errors","date":"January 24, 2021","title":"GO 编程模式02：错误处理"}}},{"node":{"excerpt":"img 在本篇文章中，我会对Go语言编程模式的一些基本技术和要点，这样可以让你更容易掌握Go语言编程。其中，主要包括，数组切片的一些小坑，还有接口编程，以及时间和程序运行性能相关的话题。 Slice 首先，我们先来讨论一下Slice，中文翻译叫“切片”，这个东西在Go…","fields":{"slug":"/Go编程模式-转载自酷壳/GO编程模式：切片，接口，时间和性能/"},"frontmatter":{"slug":"go-program-pattern-slice-interface-time","date":"January 24, 2021","title":"GO编程模式01：切片，接口，时间和性能"}}}]}},"pageContext":{"limit":3,"skip":9,"numPages":4,"currentPage":4}},"staticQueryHashes":["2841359383","394414991"]}