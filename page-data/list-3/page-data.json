{"componentChunkName":"component---src-templates-blog-list-js","path":"/list-3","result":{"data":{"site":{"siteMetadata":{"title":"Panda8z`s Blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"img 在本篇文章中，我们学习一下函数式编程的中非常重要的Map、Reduce、Filter的三种操作，这三种操作可以让我们非常方便灵活地进行一些数据处理——我们的程序中大多数情况下都是在到倒腾数据，尤其对于一些需要统计的业务场景，Map/Reduce/Filter…","fields":{"slug":"/Go编程模式-转载自酷壳/GO编程模式：MAP-REDUCE/"},"frontmatter":{"slug":"go-program-pattern-map-reduce","date":"January 24, 2021","title":"GO编程模式05：MAP-REDUCE"}}},{"node":{"excerpt":"img 图片来源：GopherSource 反转控制IoC – Inversion of Control 是一种软件设计的方法，其主要的思想是把控制逻辑与业务逻辑分享，不要在业务逻辑里写控制逻辑，这样会让控制逻辑依赖于业务逻辑，而是反过来，让业务逻辑依赖控制逻辑。在《IoC…","fields":{"slug":"/Go编程模式-转载自酷壳/GO编程模式：委托和反转控制/"},"frontmatter":{"slug":"go-program-pattern-delegation-and-reverse-control","date":"January 24, 2021","title":"GO编程模式04：委托和反转控制"}}},{"node":{"excerpt":"img 在本篇文章中，我们来讨论一下 Functional Options 这个编程模式。这是一个函数式编程的应用案例，编程技巧也很好，是目前在Go…","fields":{"slug":"/Go编程模式-转载自酷壳/GO 编程模式：FUNCTIONAL OPTIONS/"},"frontmatter":{"slug":"go-program-pattern-functional-options","date":"January 24, 2021","title":"GO 编程模式03：FUNCTIONAL OPTIONS"}}}]}},"pageContext":{"limit":3,"skip":6,"numPages":4,"currentPage":3}},"staticQueryHashes":["2841359383","394414991"]}